[tool.poetry]
name = "erasmus"
version = "23.8.1.dev0"
description = ""
authors = ["Bryan Forbes <bryan@reigndropsfall.net>"]
license = "BSD-3-Clause"
packages = [
  { include = "erasmus" }
]

[tool.poetry.dependencies]
python = "^3.12"
alembic = "1.12.1"
attrs = "23.1.0"
beautifulsoup4 = "4.12.2"
more-itertools = "10.1.0"
"fluent.runtime" = "0.4.0"

[tool.poetry.dependencies.botus_receptus]
git = "https://github.com/bryanforbes/botus_receptus.git"
tag = "v23.11.0"
extras = ["uvloop", "sqlalchemy"]

[tool.poetry.dependencies.discord-py]
version = "2.3.2"
extras = ["speed"]

[tool.poetry.group.dev.dependencies]
asyncpg-stubs = "0.29.1"
black = "23.11.0"
coverage = {version = "7.3.2", extras = ["toml"]}
mypy = "1.6.1"
pre-commit = "3.5.0"
pytest = "7.4.3"
pytest-asyncio = "0.21.1"
pytest-clarity = "1.0.1"
pytest-cov = "4.1.0"
pytest-mock = "3.12.0"
pytest-recording = "0.13.0"
pytest-sugar = "0.9.7"
pytest-xdist = "3.3.1"
ruff = "0.1.5"

[tool.poetry.scripts]
erasmus = 'erasmus.run:main'

[tool.black]
line-length = 88
target-version = ["py312"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | htmlcov
)/
'''

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "^\\s+pass$",
  "^\\s*if TYPE_CHECKING:",
  "^\\s*\\.\\.\\.\\s*$"
]
omit = [
  "erasmus/cogs/bible/testing_server_preferences_group.py"
]

[tool.ruff]
select = [
  "ANN", "B", "B9", "BLE", "C", "C4", "C9", "E", "EXE", "F", "FBT", "G",
  "I", "I002", "ISC", "INP", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET",
  "RSE", "S", "SIM", "T10", "T20", "TCH", "TID251", "TRY", "UP", "W", "RUF"
]
ignore = ["ANN101", "ANN102", "PLR0913", "PLR2004", "PT004", "TRY003"]
extend-exclude = [".venv*"]
line-length = 88
target-version = "py312"

[tool.ruff.per-file-ignores]
"*.pyi" = ["ANN401", "E501", "E701", "E741", "F401", "F403", "F405", "F811", "FBT001", "FBT002", "PGH003"]
"erasmus/cogs/*.py" = ["FBT"]
"tests/*.py" = ["ANN401", "FBT001", "FBT002", "PGH003", "PLR0912", "S101"]
"alembic/*.py" = ["ANN20", "ANN401", "INP", "PGH003"]

[tool.ruff.isort]
extra-standard-library = ["typing_extensions", "_typeshed"]
known-first-party = ["erasmus"]
known-third-party = ["alembic"]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports.banned-api]
"typing.TypeVar".msg = "Use `typing_extensions.TypeVar` instead."


[tool.pyright]
include = ["erasmus", "tests", "stubs"]
stubPath = "./stubs"
venvPath = "."
venv = ".venv"

pythonVersion = "3.12"
reportUnnecessaryTypeIgnoreComment = "warning"
typeCheckingMode = "strict"
reportPrivateUsage = "none"
reportUnusedImport = "none"
reportUnusedVariable = "none"
reportImportCycles = "none"
reportImplicitOverride = "error"
deprecateTypingAliases = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=erasmus --cov-branch --cov-report=term -nauto --dist=loadscope"
testpaths = ["tests"]
asyncio_mode = "auto"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
