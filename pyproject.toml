[tool.poetry]
name = "erasmus"
version = "2.0.0"
description = ""
authors = ["Bryan Forbes <bryan@reigndropsfall.net>"]
license = "BSD-3-Clause"
packages = [
  { include = "erasmus" }
]

[tool.poetry.dependencies]
python = "^3.10"
alembic = "^1.8"
attrs = "^22.1.0"
beautifulsoup4 = "^4.11"
"botus_receptus" = {git = "https://github.com/bryanforbes/botus_receptus.git", rev = "0974aed45b8b577735776776a5612b5b9b7d0771", extras = ["uvloop", "sqlalchemy"]}
"discord.py" = { git = "https://github.com/Rapptz/discord.py", branch = "master", extras = ["speed"] }
more-itertools = "~8.13.0"

[tool.poetry.dev-dependencies]
asyncpg-stubs = "~0.26.2"
sqlalchemy2-stubs = "^0.0.2a24"
black = "^22.6"
coverage = {version = "^6.4", extras = ["toml"]}
flake8 = "~4.0"
flake8-bugbear = ">=21.3.1"
flake8-pyi = "^22.7"
isort = "^5.10"
mypy = ">=0.901"
pre-commit = "^2.20"
pytest = "^7.1"
pytest-asyncio = "^0.19.0"
pytest-clarity = "^1.0.1"
pytest-cov = "^3.0"
pytest-mock = "^3.8"
pytest-recording = "^0.12.1"
pytest-sugar = "^0.9.5"
pytest-xdist = "^2.5"

[tool.poetry.scripts]
erasmus = 'erasmus.run:main'

[tool.black]
line-length = 88
target-version = ["py310"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | alembic
  | htmlcov
)/
'''

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise NotImplementedError",
  "^\\s+pass$",
  "^\\s*if TYPE_CHECKING:",
  "^\\s*\\.\\.\\.\\s*$"
]

[tool.isort]
extra_standard_library = ["typing_extensions", "_typeshed"]
known_first_party = ["erasmus"]
virtual_env = ".venv"
profile = "black"
combine_as_imports = true

[tool.pyright]
include = ["erasmus", "tests", "stubs"]
stubPath = "./stubs"

pythonVersion = "3.10"
reportUnnecessaryTypeIgnoreComment = "warning"
typeCheckingMode = "strict"
reportPrivateUsage = "none"
reportUnusedImport = "none"
reportUnusedVariable = "none"
reportImportCycles = "none"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=erasmus --cov-branch --cov-report=term -nauto --dist=loadscope"
testpaths = ["tests"]
asyncio_mode = "auto"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
